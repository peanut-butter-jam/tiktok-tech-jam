"""Drop checks tbl

Revision ID: 7af78a79935e
Revises: 8b99115994a9
Create Date: 2025-08-29 11:53:23.041221

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "7af78a79935e"
down_revision: Union[str, None] = "8b99115994a9"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("checks_regulations")
    op.drop_table("checks")
    # ### end Alembic commands ###
    sa.Enum("PENDING", "COMPLETED", "FAILED", name="status").drop(op.get_bind(), checkfirst=False)


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "checks",
        sa.Column("flag", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("reasoning", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "status",
            sa.ENUM("PENDING", "COMPLETED", "FAILED", name="status"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("feature_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('checks_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["feature_id"], ["features.id"], name="checks_feature_id_fkey"),
        sa.PrimaryKeyConstraint("id", name="checks_pkey"),
        sa.UniqueConstraint("feature_id", name="checks_feature_id_key"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "checks_regulations",
        sa.Column("check_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("regulation_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["check_id"], ["checks.id"], name="checks_regulations_check_id_fkey"),
        sa.ForeignKeyConstraint(
            ["regulation_id"], ["regulations.id"], name="checks_regulations_regulation_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="checks_regulations_pkey"),
    )
    # ### end Alembic commands ###
